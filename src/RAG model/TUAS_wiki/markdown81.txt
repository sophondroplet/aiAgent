[ Skip to content ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#level-0-go-tutorial>)
[ ![logo](https://tritonuas.com/wiki/assets/tuas_2020_favicon_white.svg) ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/> "TritonUAS Wiki")
TritonUAS Wiki 
Go Tutorial 
Type to start searching
[ GitHub  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/github.com/tritonuas/wiki/> "Go to repository")
  * [ Home ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/>)
  * [ General ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/general/town_hall_notes/>)
  * [ Onboarding ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/onboarding/foam_aircraft_project/>)
  * [ Hardware ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/hardware/wings/>)
  * [ Mechanical ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/mechanical/mechanical_home/>)
  * [ Electrical ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/electrical/electrical-overview/>)
  * [ Software ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/software_home/>)


[ ![logo](https://tritonuas.com/wiki/assets/tuas_2020_favicon_white.svg) ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/> "TritonUAS Wiki") TritonUAS Wiki 
[ GitHub  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/github.com/tritonuas/wiki/> "Go to repository")
  * [ Home  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/>)
  * General  General 
    * [ Town Hall Notes  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/general/town_hall_notes/>)
    * [ Test Flight  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/general/test_flight/>)
    * [ Repo Guide  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/general/repo_guide/>)
    * [ Useful Links  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/general/links/>)
    * [ Wiki Editing  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/general/wiki_editing/>)
    * [ Website Editing  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/general/website_editing/>)
  * Onboarding  Onboarding 
    * [ Foam Aircraft Project  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/onboarding/foam_aircraft_project/>)
    * [ Servos  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/onboarding/servos/>)
  * Hardware  Hardware 
    * [ Wings  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/hardware/wings/>)
    * [ Fuselage  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/hardware/fuselage/>)
    * [ VTOL  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/hardware/vtol/>)
    * [ Camera Gimbal  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/hardware/camera_gimbal/>)
    * [ Payload  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/hardware/payload/>)
    * [ GCS  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/hardware/gcs/>)
  * Mechanical  Mechanical 
    * [ Mechanical Home  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/mechanical/mechanical_home/>)
    * Competition Planes  Competition Planes 
      * [ Toothless  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/mechanical/toothless/toothless/>)
      * [ Duckasaurus  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/mechanical/duckasaurus/duckasaurus/>)
    * Onboarding Projects  Onboarding Projects 
      * [ The Marius  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/mechanical/onboarding-projects/the_marius/>)
    * Manufacturing  Manufacturing 
      * [ Overview  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/mechanical/manufacturing/manufacturing_overview/>)
      * [ Mold Manufacturing  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/mechanical/manufacturing/Mold_Manufacturing/>)
      * [ CNC Hot Wire Cutter  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/mechanical/manufacturing/CNC_hot_wire/>)
    * Design/Analysis  Design/Analysis 
      * [ Overview  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/mechanical/design-analysis/overview/>)
      * Optimization  Optimization 
        * [ Overview  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/mechanical/optimization/optimization_overview/>)
    * Tutorials  Tutorials 
      * [ Solidworks  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/mechanical/tutorials/solidworks/>)
      * [ Ansys  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/mechanical/tutorials/ansys/>)
      * [ Matlab/Optimization  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/mechanical/tutorials/matlab-optimization/>)
    * [ Mechanical Packing List  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/mechanical/packing_list/>)
  * Electrical  Electrical 
    * [ Electrical Overview  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/electrical/electrical-overview/>)
    * [ Electronics Diagram  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/electrical/electronics-diagram/>)
    * Projects  Projects 
      * Airdrop  Airdrop 
        * [ Overview  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/electrical/projects/airdrop/overview/>)
        * [ Mechanism  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/electrical/projects/airdrop/drop_mechanism/>)
        * [ GPIO Setup  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/electrical/projects/airdrop/GPIO_setup/>)
        * [ Drop Calculation  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/electrical/projects/airdrop/drop_script/>)
      * [ Antenna Tracker  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/electrical/projects/antenna-tracker/>)
      * [ Power Board  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/electrical/projects/power-board/>)
      * Signals Board  Signals Board 
        * [ Overview  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/electrical/projects/signals-board/signals-board/>)
        * [ Sensor Input  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/electrical/projects/signals-board/sensor-input/>)
        * [ Signals Board Code  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/electrical/projects/signals-board/sigboard-code/>)
        * [ Signals Board Requirements  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/electrical/projects/signals-board/sigboard-reqs/>)
    * Communication  Communication 
      * [ CAN  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/electrical/communication/can/>)
      * [ I2C  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/electrical/communication/i2c/>)
      * [ MAVLink  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/electrical/communication/mavlink/>)
      * [ UART  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/electrical/communication/uart/>)
      * [ Wireless Communication  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/electrical/communication/wireless-comms/>)
    * Other Tutorials  Other Tutorials 
      * [ Fabrication  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/electrical/other-tutorials/fabrication/>)
      * [ Ardupilot/Pixhawk  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/electrical/other-tutorials/ardupilot-pixhawk/>)
  * Software  Software 
    * [ Software Home  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/software_home/>)
    * [ How to Contribute  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/how_to_contribute/>)
    * Reference  Reference 
      * [ Git  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/reference/git/>)
      * [ Computer Vision  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/reference/computer_vision/>)
      * [ Datahub  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/reference/datahub/>)
    * GCS  GCS 
      * [ Overview  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/gcs/gcs_overview/>)
      * [ Configuration  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/gcs/gcs_configuration/>)
      * Frontend  Frontend 
        * [ Overview  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/gcs/frontend/frontend_overview/>)
        * [ Pages  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/gcs/frontend/frontend_pages/>)
      * Backend  Backend 
        * [ Overview  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/gcs/backend/backend_overview/>)
        * [ Endpoints  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/gcs/backend/backend_endpoints/>)
    * OBC  OBC 
      * [ Overview  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/obc/obc_overview/>)
      * Pathing  Pathing 
        * [ RRT-Star  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/obc/pathing/rrt-star/>)
        * [ Coverage  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/obc/pathing/coverage/>)
      * Tick Architecture  Tick Architecture 
        * [ Overview  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/obc/tick_architecture/tick_overview/>)
        * [ Guide  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/obc/tick_architecture/guide/>)
        * Ticks  Ticks 
          * [ Mission Prep  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/obc/tick_architecture/ticks/missionprep/>)
          * [ Path Gen  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/obc/tick_architecture/ticks/pathgen/>)
          * [ Path Validate  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/obc/tick_architecture/ticks/pathvalidate/>)
          * [ Mav Upload  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/obc/tick_architecture/ticks/mavupload/>)
          * [ Takeoff  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/obc/tick_architecture/ticks/takeoff/>)
          * [ Fly Waypoints  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/obc/tick_architecture/ticks/flywaypoints/>)
          * [ Fly Search  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/obc/tick_architecture/ticks/flysearch/>)
          * [ CV Loiter  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/obc/tick_architecture/ticks/cvloiter/>)
          * [ Airdrop Prep  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/obc/tick_architecture/ticks/airdropprep/>)
          * [ Airdrop Approach  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/obc/tick_architecture/ticks/airdropapproach/>)
          * [ Manual Landing  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/obc/tick_architecture/ticks/manuallanding/>)
          * [ Auto Landing  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/obc/tick_architecture/ticks/autolanding/>)
          * [ Mission Done  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/obc/tick_architecture/ticks/missiondone/>)
    * Target Detection Team  Target Detection Team 
      * [ Overview  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/target_detection_team/target_detection_overview/>)
      * [ Saliency  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/target_detection_team/saliency/>)
      * [ Segmentation  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/target_detection_team/segmentation/>)
      * [ Classification  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/target_detection_team/classification/>)
    * Localization  Localization 
      * [ Overview  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/localization/localization_overview/>)
    * Dataset Generation  Dataset Generation 
      * [ Overview  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/dataset_generation/dataset_generation_overview/>)
    * Workshops  Workshops 
      * [ Overview  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/workshops/workshops_overview/>)
      * Contents  Contents 
        * [ 01. Unix/Command Line  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/workshops/contents/01_unix_basics/>)
        * [ 02. Git/GitHub  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/workshops/contents/02_git_deep_dive/>)
        * [ 03. HTTP/REST  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/workshops/contents/03_http_and_rest/>)
        * [ 04. Docker  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/workshops/contents/04_docker/>)
        * [ 05. Pointers  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/workshops/contents/05_pointers/>)
        * [ 06. Unit Tests  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/workshops/contents/06_unit_tests/>)
        * [ 07. Design Patterns  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/workshops/contents/07_design_patterns/>)
        * [ 08. Async Programming  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/workshops/contents/08_async_programming/>)
        * [ 09. Continuous Integration  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/workshops/contents/09_continuous_integration/>)
    * Onboarding  Onboarding 
      * [ Overview  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/onboarding_overview/>)
      * Level 0  Level 0 
        * [ Overview  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_overview/>)
        * [ Python Tutorial  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_python/>)
        * Go Tutorial  [ Go Tutorial  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/>) Table of contents 
          * [ A note on Go  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#a-note-on-go>)
          * [ 1 "Hello World" Program  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#1-hello-world-program>)
            * [ 1.1 Installing Go  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#11-installing-go>)
            * [ 1.1.1 Installing Go Editor and Tools  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#111-installing-go-editor-and-tools>)
              * [ VS Code  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#vs-code>)
              * [ Goland  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#goland>)
              * [ Vim/Neovim  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#vimneovim>)
            * [ 1.2 Running a Go Program  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#12-running-a-go-program>)
            * [ 1.3 Explaining Hello World  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#13-explaining-hello-world>)
          * [ 2 Go Basics  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#2-go-basics>)
            * [ 2.1 Variables  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#21-variables>)
              * [ 2.1.1 Declaration  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#211-declaration>)
              * [ 2.1.2 Assignment  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#212-assignment>)
              * [ 2.1.3 Unused Variables  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#213-unused-variables>)
            * [ 2.2 Data Types  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#22-data-types>)
              * [ 2.2.1 Integers  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#221-integers>)
                * [ Signed  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#signed>)
                * [ Unsigned  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#unsigned>)
                * [ Operators  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#operators>)
              * [ 2.2.2 Floats  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#222-floats>)
              * [ 2.2.3 Booleans  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#223-booleans>)
              * [ 2.2.4 Strings  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#224-strings>)
              * [ 2.2.5 Printf detour  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#225-printf-detour>)
              * [ 2.2.6 Arrays  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#226-arrays>)
              * [ 2.2.7 Slices  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#227-slices>)
              * [ 2.2.8 Maps  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#228-maps>)
            * [ 2.3 Functions  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#23-functions>)
            * [ 2.4 Structs  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#24-structs>)
            * [ 2.4 Control Flow  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#24-control-flow>)
              * [ 2.4.1 If-Else  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#241-if-else>)
              * [ 2.4.2 Loops  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#242-loops>)
              * [ 2.4.3 Error Handling  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#243-error-handling>)
          * [ 3 Hangman  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#3-hangman>)
            * [ 3.1 User input  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#31-user-input>)
            * [ 3.2 Repeating Input  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#32-repeating-input>)
            * [ 3.3 Keep track of guesses  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#33-keep-track-of-guesses>)
            * [ 3.4 Printing out game state  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#34-printing-out-game-state>)
            * [ 3.5 Randomize words  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#35-randomize-words>)
          * [ Resources  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#resources>)
        * [ C++ Tutorial  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_cpp/>)
      * Level 1  Level 1 
        * [ Overview  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_1/level_1_overview/>)
      * Level 2  Level 2 
        * [ Overview  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_2/level_2_overview/>)
    * Miscellaneous  Miscellaneous 
      * [ Design Proposals  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/misc/design_review/>)
      * [ Nanostation Setup  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/misc/nanostations/>)
      * [ Passwords  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/misc/passwords/>)
      * [ Test Flight Checklist  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/misc/test_flight_checklist/>)


Table of contents 
  * [ A note on Go  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#a-note-on-go>)
  * [ 1 "Hello World" Program  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#1-hello-world-program>)
    * [ 1.1 Installing Go  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#11-installing-go>)
    * [ 1.1.1 Installing Go Editor and Tools  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#111-installing-go-editor-and-tools>)
      * [ VS Code  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#vs-code>)
      * [ Goland  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#goland>)
      * [ Vim/Neovim  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#vimneovim>)
    * [ 1.2 Running a Go Program  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#12-running-a-go-program>)
    * [ 1.3 Explaining Hello World  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#13-explaining-hello-world>)
  * [ 2 Go Basics  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#2-go-basics>)
    * [ 2.1 Variables  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#21-variables>)
      * [ 2.1.1 Declaration  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#211-declaration>)
      * [ 2.1.2 Assignment  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#212-assignment>)
      * [ 2.1.3 Unused Variables  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#213-unused-variables>)
    * [ 2.2 Data Types  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#22-data-types>)
      * [ 2.2.1 Integers  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#221-integers>)
        * [ Signed  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#signed>)
        * [ Unsigned  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#unsigned>)
        * [ Operators  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#operators>)
      * [ 2.2.2 Floats  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#222-floats>)
      * [ 2.2.3 Booleans  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#223-booleans>)
      * [ 2.2.4 Strings  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#224-strings>)
      * [ 2.2.5 Printf detour  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#225-printf-detour>)
      * [ 2.2.6 Arrays  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#226-arrays>)
      * [ 2.2.7 Slices  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#227-slices>)
      * [ 2.2.8 Maps  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#228-maps>)
    * [ 2.3 Functions  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#23-functions>)
    * [ 2.4 Structs  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#24-structs>)
    * [ 2.4 Control Flow  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#24-control-flow>)
      * [ 2.4.1 If-Else  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#241-if-else>)
      * [ 2.4.2 Loops  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#242-loops>)
      * [ 2.4.3 Error Handling  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#243-error-handling>)
  * [ 3 Hangman  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#3-hangman>)
    * [ 3.1 User input  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#31-user-input>)
    * [ 3.2 Repeating Input  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#32-repeating-input>)
    * [ 3.3 Keep track of guesses  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#33-keep-track-of-guesses>)
    * [ 3.4 Printing out game state  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#34-printing-out-game-state>)
    * [ 3.5 Randomize words  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#35-randomize-words>)
  * [ Resources  ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#resources>)


# Level 0 Go Tutorial
## A note on Go
Go is a language developed by Google. It's a fast, compiled language thats geared towards concurrent workflows and web applications. 
For this reason, we use it for the backend of our ground control station.
## 1 "Hello World" Program
Let's start by making sure that you have a working Go development environment set up to run a Hello World program.
### 1.1 Installing Go
To compile Go source code, you will need to download the Go compiler and it's associated utilities.
There are two ways we recommend installing Go.
  1. Binary Distribution
  2. via a Go version manager


To download the binary distribution of Go, download the version for your operating system and architecture from [here](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/go.dev/dl/>) and follow the installation instructions [here](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/go.dev/doc/install>).
A Go version manager can help you manage your Go installation and switch between multiple Go versions.
[Here](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/github.com/stefanmaric/g>) is one that we recommend, but you're free to use your own.
If you use [g](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/github.com/stefanmaric/g>), make sure to install a version of Go.
You can install the latest like so: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-0-1>)ginstalllatest

```

Or a specific version: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-1-1>)ginstall1.21

```

Once Go is installed, verify with the following command: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-2-1>)goversion

```

### 1.1.1 Installing Go Editor and Tools
You're free to use the text editor or IDE of your choice. However, you might want tools such as autocompletion and syntax highlighting to help you during development. We have a few recommendations when it comes to working with Go. 
#### VS Code
VS Code is a text editor developed by Microsoft that is a popular choice among many developers. While it doesn't come with built-in support for many languages, it can be extended with community based extensions from the [VS Code Marketplace](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/marketplace.visualstudio.com/VSCode>). It is a great choice if you want a single editor no matter what language you are working with.
While, VS Code itself doesn't come built with Go support, it can easily be obtained via an extension. 
First install VS Code from [here](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/code.visualstudio.com/>).
Open VS Code and click on the Extension Marketplace Button on the left sidebar:
![marketplace](https://drive.google.com/uc?export=view&id=1HZ9XKPXOpvNgldisTnAYJ3tN7Z8P1Sxl)
Search for Go and install the first one from the "Go team at Google".
![go-extension](https://drive.google.com/uc?export=view&id=1qYrfEfvkggczTjixA90-eoOU57_QzHiz)
Once it's installed, you should have syntax highlighting, autocompletion and much more all setup. 
#### Goland
[Goland](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/www.jetbrains.com/go/>) is a full IDE developed by Jetbrains with first class support for Go. If you've used other Jetbrains products such as [Intellij IDEA](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/www.jetbrains.com/idea/>) for Java, you may already be comfortable with using Goland.
Goland is a paid IDE. Pricing is available [here](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/www.jetbrains.com/go/buy/#personal>) and you can download it from [here](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/www.jetbrains.com/go/download>). 
However, you may be eligible for a free copy of Goland if you register using your UCSD email address. More information about this program can be found [here](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/www.jetbrains.com/community/education/#students>).
#### Vim/Neovim
Vim and Neovim are lightweight, terminal-based text editors with. Similarly to VS Code they have no built-in Go tools. Getting Vim/Neovim setup for Go is a bit more involved than installing an extension for VS Code. So if you want something that just works as soon as possible, go with VS Code. 
You can add Go support with various extensions. [This extension](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/github.com/fatih/vim-go>) provides Go support for Vim. For neovim, you can setup a language server that supports Go. [This](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/github.com/VonHeikemen/lsp-zero.nvim>) is one extension that will get you up and running relatively quickly. There are also distributions of Neovim that come built in with Go support. [LunarVim](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/www.lunarvim.org/>) is one of those distributions that comes built in with Go support.
### 1.2 Running a Go Program
As mentioned, Go is a compiled language so we can build an executable file that will run natively for our specific architecture and operating system. 
Here's a Go "Hello World" program. It'll just be presented here and will be explained in just a second. Create a file called `main.go` with the following contents:
main.go```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-3-1>)packagemain
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-3-2>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-3-3>)import"fmt"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-3-4>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-3-5>)funcmain(){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-3-6>)fmt.Println("Hello World!")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-3-7>)}

```

Once the file has been created and saved, enter your terminal and run the following command to build the executable file: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-4-1>)gobuildmain.go

```

You should now see the executable file that was created. Run `ls` to verify.
ls```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-5-1>)main main.go

```

You can run the binary via your shell as so: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-6-1>)./main

```

```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-7-1>)Hello World!

```

If you got to this stage, you have successfully set up a development environment for Go. 
There is another way you can run your Go programs. It involves the `go run` command.
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-8-1>)gorunmain.go

```

`go run` will compile and run the program defined in the specified file. If you try to run `go run main.go`, the "Hello World" program should run just the same.
### 1.3 Explaining Hello World
Now that we have a working "Hello World" program, let's figure out how it works.
If we go line by line in the program, the first line looks like this: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-9-1>)packagemain

```

This is where we define the package that our project belongs to. Packages are how we organize components of our project. We can group together functions, types, constants, and more. We can also group together multiple Go source code files into a single package. 
The `main` package contains the entrypoint of our program.
The next line of code looks like this: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-10-1>)import"fmt"

```

This is an import statement that imports the `fmt` package. The `fmt` package includes handy functions that help us with text formatting and outputting text to the terminal. The `fmt` package is provided by the Go standard library. We can import a package from the standard library, from a 3rd party library, or our own code. By importing the package, we can access it's functionality from our program. 
The next line looks like this: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-11-1>)funcmain(){

```

This is the start of where our `main` function is declared. This line specifically is the function header (also called function signature). `main` is a special function which is the entrypoint of our program. When we run an exectable, whatever is in `main` gets executed first. If you've worked in languages such as Java you might be familiar with declaring a main method with the signature of `public static void main(String[] args)`. The `main` function in Go works just the same and must be declared for any Go program.
If you're not familiar with functions from another language, they are blocks of code that perform a task. They are defined somewhere and can be reused multiple times. They can take zero or more inputs and produce an output. We'll get to talking about how functions are defined in Go later on.
Inside the body of our main function, we have this line: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-12-1>)fmt.Println("Hello World!")

```

This is the real meat and potatoes of the "Hello World program". We are calling the `Println` function that is defined within the `fmt` package. `Println` will take in any number of inputs, also known as arguments, and display them to the terminal. In this case, we only provide a single argument: `"Hello World!"`. 
This argument, `"Hello World!"`, is a type of data called a string. If you're familiar with strings from another language, you should already be familiar with how they work in Go. If not, strings are types of data that allow us to store text. Strings are just a sequence of characters. When repsresenting a string in Go, we wrap it in double quotes. Here we have created the string with the value of `Hello World!` and passed it as an argument to our call to `fmt.Println`.
The last line in our program is a closing curly brace to signify the end of the declaration of the `main` function. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-13-1>)}

```

And with that, we've seen how a simple Go program works.
## 2 Go Basics
### 2.1 Variables
Variables can be thought of as containers that can store some peice of data. We can reference the underlying data of a variable using it's variable name. 
Variables can store an assortment of data types. We'll get to talking about most of them in the [next section](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#22-data-types>).
#### 2.1.1 Declaration
In Go, there are two main ways of declaring variables.
The first is a bit more verbose and requires that you specify the type of the variable in question. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-14-1>)varxint=5

```

In this case, we declared a variable named `x`, of type `int` (integer) with a value of `5`. 
You can verify this by printing the variable out after declaration. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-15-1>)varxint=5
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-15-2>)fmt.Println(x)

```

We also technically don't need to specify the value itself. We could also declare `x` like so: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-16-1>)varxint

```

In this scenario, the natural question to ask is "What value does `x` have?". If we don't specify a value, the variable takes on the **zero value** associated with it's type. For some types, like `int`, the zero value is obvious. In this case, the zero value is just the numerical value of 0. For other types, it might not be as obvious so we'll talk about that later. In general, you should try to declare your variables with concrete values wherever possible. It can avoid any potential ambiguity and make your code easier to work with. 
Once again, you could verify by printing out the value of the variable. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-17-1>)varxint
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-17-2>)fmt.Println(x)

```

The other syntax of declaring a variable is a bit more succinct and doesn't require the type of the variable to be specified. Instead, the compiler will infer what the type of the variable should be based on the assignment.
The syntax looks like this: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-18-1>)x:=5

```

We use the `:=` operator to accomplish this. This is sometimes referred to as the _walrus_ operator. 
#### 2.1.2 Assignment
Now that we've seen a few ways of declaring variables, let's talk about updating the value of a variable.
One can do so with the `=` operator. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-19-1>)x:=5
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-19-2>)fmt.Println(x)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-19-3>)x=6
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-19-4>)fmt.Println(x)

```

While these two lines might seem very similar, it is important to understand the slight difference. In other languages, you just use the = operator to both declare and update variables. This will be familiar to you if you have programmed in a language like Java, C, or Python. However, in Go, you are allowed to declare variables without explicitly declaring their type. Therefore, in order to be more explicit that you are defining a new variable x with an initial value of 5, rather than trying to update a variable x that already exists, you have to use the walrus operator instead of the normal assignment operator. It is mainly a stylistic choice, i.e. the language could have been implemented without the walrus operator because the compiler would be able to tell if you were declaring a new variable rather than updating an old one, but this syntactical distinction forces you the programmer to understand the difference, which can help prevent errors. You will probably forget to do this at first, but eventually it will become second nature.
#### 2.1.3 Unused Variables
One quirk of Go that might be quite annoying at first is the matter of unused variables. If you have a variable which is not used after declaration, the program will not compile.
Take this simple block of code: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-20-1>)packagemain
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-20-2>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-20-3>)funcmain(){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-20-4>)x:=5
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-20-5>)}

```

Compiler output```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-21-1>)./main.go:4:5: x declared but not used

```

To resolve this compiler error, you can either use the variable, comment it out, ignore the variable, or delete the line. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-22-1>)packagemain
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-22-2>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-22-3>)funcmain(){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-22-4>)x:=5
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-22-5>)fmt.Println(x)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-22-6>)}

```

Comments in Go require two forward slashes. Any code after that point will be ignored by the compiler. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-23-1>)packagemain
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-23-2>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-23-3>)funcmain(){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-23-4>)// x := 5
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-23-5>)}

```

You can also ignore the variable by renaming it to `_` (called the blank identifier). 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-24-1>)packagemain
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-24-2>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-24-3>)funcmain(){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-24-4>)_=5
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-24-5>)}

```

### 2.2 Data Types
#### 2.2.1 Integers
Integers are any whole number. Go has several ways of representing integers. 
##### Signed
The `int` type is one way that Go represents signed integers. Signed integers allow us to store both negative and positive integers. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-25-1>)varxint=-100
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-25-2>)fmt.Println(x)

```

Go has various signed integer types that allow us to represent integers of different sizes.
Type | Range  
---|---  
`int8` | -128 to 127 | -27 to 27-1  
`int16` | -32,768 to 32,767 | -215 to 215-1  
`int32` | -2,147,483,648 to 2,147,483,647 | -231 to 231-1  
`int64` | -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807 | -263 to 263-1  
`int` | Platform dependent. Same as `int32` for 32-bit systems and `int64` for 64-bit systems.  
##### Unsigned
Go represents unsigned integers using the `uint` type. Unsigned integers only allow us to store **non-positive** integers. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-26-1>)varxuint=70
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-26-2>)fmt.Println(x)

```

Type | Range  
---|---  
`uint8` | 0 to 255 | 0 to 27-1  
`uint16` | 0 to 65,535 | 0 to 215-1  
`uint32` | 0 to 4,294,967,295 | 0 to 231-1  
`uint64` | 0 to 18,446,744,073,709,551,615 | 0 to 263-1  
`uint` | Platform dependent. Same as `uint32` for 32-bit systems and `uint64` for 64-bit systems.  
##### Operators
You can apply several arithemtic operations to integers in Go.
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-27-1>)x:=0
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-27-2>)x=x+10
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-27-3>)x=x-2
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-27-4>)x=x*4
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-27-5>)x=x/2

```

If the result of dividing an integer is a non-whole number, the decimal component will be chopped off (or truncated) and the result will be only the integer component. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-28-1>)varxint=5
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-28-2>)x=x/2
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-28-3>)fmt.Println(x)

```

Output```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-29-1>)2

```

There is also another operator, `%`, called the modulo operator. The modulo operator will return the remainder of division between two numbers.
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-30-1>)varxint=5
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-30-2>)x=x%2
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-30-3>)fmt.Println(x)

```

Output```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-31-1>)1

```

#### 2.2.2 Floats
Go has the `float32` and `float64` types which allows us to store non-whole numbers with a decimal point.
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-32-1>)varxfloat64=24.58
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-32-2>)fmt.Println(x)

```

Most integer arithmetic operations apply to floats (except for modulo).
#### 2.2.3 Booleans
Booleans allow us to store either `true` or `false`. Go provides us the `bool` type to represent this data.
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-33-1>)varxbool=true
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-33-2>)fmt.Println(x)

```

We can negate boolean values with the `!` operator. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-34-1>)varxbool=true
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-34-2>)fmt.Println(x)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-34-3>)x=!x
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-34-4>)fmt.Println(x)

```

Output```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-35-1>)true
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-35-2>)false

```

Boolean values can also show up when evaluating comparison statements. Go has the following comparison operators: `==`, `!=`, `<`, `>`, `>=`, and `<=`.
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-36-1>)x:=2==2
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-36-2>)fmt.Println(x)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-36-3>)y:=2>3
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-36-4>)fmt.Println(y)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-36-5>)z:=2<=3
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-36-6>)fmt.Println(z)

```

Output```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-37-1>)true
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-37-2>)false
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-37-3>)true

```

#### 2.2.4 Strings
As mentioned previously, strings allow us to store a sequence of characters.
We define strings as text within double quotes. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-38-1>)x:="this is my string"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-38-2>)fmt.Println(x)

```

You can also apply some operators to strings. 
To check for equality between two strings: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-39-1>)x:="hi"=="bye"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-39-2>)fmt.Println(x)

```

Output```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-40-1>)false

```

You can also use the `+` to concatenate two strings together. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-41-1>)x:="Hello "+"there"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-41-2>)fmt.Println(x)

```

Output```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-42-1>)Hello there

```

#### 2.2.5 Printf detour
While this isn't a data type, we can use our knowledge of some simple data types to explain how string formatting works.
Go includes a function in the `fmt` package called `Printf` which is useful for formatting how variables are printed out alongisde text and other values.
Let's say I wanted to print out the current temperature and I had the temperature stored in a variable. We can do so with the `Printf` function. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-43-1>)temp:=82
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-43-2>)fmt.Printf("The temperature is %d degrees today",temp)

```

Let's figure out what's going on here. 
As mentioned with `Println`, we provide arguments to this function call. In this case, the first argument has different behavior than all the other ones. The first argument outlines the format specifier which determines how the output string should look like. 
Here we define our format specifier as `"The temperature is %d degrees today"` where we have our message, this weird `%d` thing, and the end of our message. 
The `%d` is one example of a formatting verb. This one specifically prints out a base 10 integer. Check out [here](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/pkg.go.dev/fmt#hdr-Printing>) for a complete list. 
Here's a few to note:
  * `%s` for strings
  * `%f` for floats
  * `%v` where Go will infer the verb from the type


The rest of the arguments determine what values should go in the spots where we placed our verbs. The next argument will match up with the first verb, the argument after that will be placed in the spot of the second verb and so on.
Here's an example with two verbs: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-44-1>)temp:=66
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-44-2>)rainfall:=3.2
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-44-3>)fmt.Printf("The temperature is going to be %d degrees and it will rain %f inches",temp,rainfall)

```

Play around with `Printf` and try to print out some other data types using the other types of [verbs](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/pkg.go.dev/fmt#hdr-Printing>).
Another function that makes use of the same string formatting directive is `fmt.Sprintf`. Unlike `fmt.Printf`, it doesn't print the result out but creates a string with the result. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-45-1>)varmessagestring
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-45-2>)message=fmt.Sprintf("Today I am %d years old",20)

```

#### 2.2.6 Arrays
Arrays in Go represent fixed-size collections of values. The number of values must be known at compile time. For a more flexible, growable collection see [Slices](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#226-slices>).
Here we declare an array of integers with 5 elements: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-46-1>)x:=[5]int{1,2,3,4,5}

```

Here's an array of 2 strings: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-47-1>)x:=[2]string{"Hello","there"}

```

Notice how the number inside the square braces represents the number of elements. Right after that we specify the type of elements we want to store. Notice that arrays must have elements of the same type. There is more you can do with arrays but we'll go over them when we discuss [Slices](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#226-slices>)
#### 2.2.7 Slices
Slices are collections of values where the number of elements can be resized. Similarly to arrays, they must have elements that are all of the same type. 
Here's a slice of strings: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-48-1>)x:=[]string{"this","is","a","slice","of","strings"}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-48-2>)fmt.Println(x)

```

Notice how we don't need to specify a size for the slice. 
The main difference is that we can now grow our slice at runtime. We can do so with the built in append function. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-49-1>)x:=[]string{"this","is","a","slice","of","strings"}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-49-2>)x=append(x,"!")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-49-3>)fmt.Println(x)

```

`append` will not change the underlying slice, but will return a new slice that includes the new elements. We'll get to talking more about returning in the section on [Functions](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#23-functions>) . 
If we want to create a new slice, there are a few ways of doing so.
Like you saw just now, we can declare a slice of literal values. To create an empty slice, we can just declare no literals: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-50-1>)x:=[]string{}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-50-2>)fmt.Println(x)

```

We can also create a new slice with the built in `make` function. `make` takes three arguments: type, capacity and length.
Here's we can create an empty slice. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-51-1>)x:=make([]string,0,0)

```

The type in this case is just `[]string` which represents a slice of strings. 
The length is how many elements the slice should contain. 
The capacity is how large the underlying array is. Let's quickly talk about how slices work under the hood. Beneath every slice, there is a fixed-sized array that stores all the values. This array is abstracted away from the programmer and you usually don't have to think much of it. When the slices grows beyond the size of the underlying array, the data is automatically copied to a larger underlying array. If you've worked with Java, this is how the Java ArrayList is also implemented. So, when we specify the capacity, we specify how large the underlying array should be. If you know that your slice will need quite a bit of memory, specifying capacity can be useful to avoid more memory allocations later in the program.
While length and capacity sound similar, they are not always the same value. If you keep growing a slice, the capacity might be increased by a large factor to avoid having to copy the data over many times. In this case, the slice has a capacity larger than the number of elements.
The `make` function can also be called without the capacity option like so: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-52-1>)x:=make([]string,0)

```

This just sets the length of the slice to the specified value. 
There are two built in functions that allow us to find the length and capacity of slices: `len` and `cap`.
Here's how they work: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-53-1>)x:=make([]string,5,10)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-53-2>)length:=len(x)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-53-3>)capacity:=cap(x)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-53-4>)fmt.Printf("slice x with length %d and capacity %d\n",length,capacity)

```

Now that we know how to create slices and add new elements to them, let's actually access the values stored in them.
One way of doing so is with index operations.
Similar to other languages, we can fetch the value at a specific index (position) in the slice. Go is 0-indexed, meaning that we start counting the index from 0. So the first element has an index of 0, the second has an index of 1 and so on. 
The notation for indexing is square brackets with the index number inside them. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-54-1>)x:=[]int{23,64}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-54-2>)first:=x[0]
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-54-3>)fmt.Printf("first element %d\n",first)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-54-4>)second:=x[1]
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-54-5>)fmt.Printf("second element %d\n",second)

```

With slices, we can also retrieve ranges of items. If we place a colon between two index numbers, we can get a slice of elements that are within those indices. The notation looks like `[a:b]` where `a` is the start of the sub-slice (inclusive) and `b` is the end (exclusive).
This example will print out the second and third elements. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-55-1>)x:=[]string{"first","second","third","fourth"}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-55-2>)fmt.Println(x[1:3])

```

We can also get elements starting from the start of the slice or all elements until the end of the slice. This is done by omiting one of the indices. So the notation would be `[:n]` for the first `n` elements and `[n:]` for all the elements starting from `n`. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-56-1>)x:=[]string{"first","second","third","fourth"}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-56-2>)fmt.Println(x[:3])
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-56-3>)fmt.Println(x[1:])

```

Check out [this article](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/go.dev/blog/slices-intro>) for more information on slices and how they work.
#### 2.2.8 Maps
Maps are another type built into Go. They allow us to store key, value pairs where all the keys are unique from each other. If you've worked with a hash map in another language, they work the same as in Go.
We can create a map using the built in `make` function.
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-57-1>)x:=make(map[string]int)

```

Notice the type signature of the map (`map[string]int`). The type inside the square braces represents the type of the keys. The type after is the type of the values. This means that we just created a map with `string` keys and `int` values.
Every key is associated with a single value. We can assign a new key value pair like so: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-58-1>)prices:=make(map[string]int)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-58-2>)prices["pizza"]=5

```

We can retrieve the value associated with a key using similar notation. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-59-1>)pizzaPrice:=prices["pizza"]

```

If the value doesn't exist, the zero-value of the map's values are returned. So in this case, if we tried to get a value of type `int` with a key that doesn't exist, `0` will be returned. 
To check if a key is within a map, you can use the following notation: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-60-1>)sodaPrice,ok:=prices["soda"]
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-60-2>)fmt.Println(sodaPrice)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-60-3>)fmt.Println(ok)

```

Try running this code without inserting the `"soda"` key and run it after adding the key. You'll notice that the `ok` variable returns a boolean that tells us if the key was in the map. This uses something in Go called multiple return values that we'll talk about soon. 
### 2.3 Functions
We've already seen the `main` function in Go. So let's now look at how functions generally work.
If we're making our own function we must declare it. We need to define a function signature and a function body. The signature will define the function name, what inputs a function should take, and what it should return. The function body contains the actual code of the function.
Let's define a simple function to add two numbers together and analyze it. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-61-1>)funcadd(xint,yint)int{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-61-2>)sum:=x+y
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-61-3>)returnsum
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-61-4>)}

```

We start by declaring our function and giving it the name `add`. We can name our function whatever we want (as long as it doesn't conflict with our other functions or any language keywords). 
The next part is wrapped in a pair of parenthesis. This is where we define the parameters to our function. These are the inputs to our function. We can define any number of parameters. For each parameter, we must give it a name and a type. Here, we have defined two parameters. One is named `x` and the other is named `y`. Both are defined as having type `int`.
The next part of the signature is the return type. The return type determines what type the output of the function should have. Here we have determined that our function should return an `int`. This makes sense since the result of adding two integers is a single integer. 
Next, we have opening curly braces that signify the start of our function body. Inside the function body, we implement our adding functionality. We compute our addition and store it in a `sum` variable. Then we return the sum we computed using the `return` keyword. The return keyword allows us to specify what value the function should output. The return value must match the return type we specified in the function signature. One thing to note is that when we reach a `return` statement, the function will stop and return the return value to whoever called it. 
When it comes to return types, we don't have to only return a single value. We can return zero or more values. 
Here's a function with no return values: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-62-1>)funchello(){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-62-2>)fmt.Println("hello")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-62-3>)}

```

Here's a function with more than one return value (in this case, two integers): 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-63-1>)funcdiv(dividendint,divisorint)(int,int){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-63-2>)quotient:=dividend/divisor
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-63-3>)remainder:=dividend%divisor
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-63-4>)returnquotient,remainder
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-63-5>)}

```

Now that we know how functions are declared, let's use them.
As mentioned when talking about `fmt.Println`, the way to call a function is to specify it's name followed by parenthesis. We can specify any number of arguments inside the parenthesis. 
Let's say we wanted to call our `hello` function earlier. This function has 0 arguments and 0 return values. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-64-1>)hello()

```

Let's call our `add` function with 2 arguments and 1 return value. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-65-1>)result:=add(2,3)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-65-2>)fmt.Println(result)

```

Let's call our `div` function with 2 arguments and 2 return values. `div` returns both the quotient and the remainder when divig two integers. Note that we can destructure the two return values using a comma notation. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-66-1>)quotient,remainder:=div(10,3)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-66-2>)fmt.Println("quotient: %d, remainder: %d\n",quotient,remainder)

```

Let's say we didn't care about the remainder, but still wanted the quotient. We can ignore the remainder by using the `_` symbol (called the blank identifier). 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-67-1>)quotient,_:=div(10,3)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-67-2>)fmt.Println("quotient: %d\n",quotient)

```

### 2.4 Structs
Structs are another way of collecting data. Unlike slices and arrays, they don't need to contain values of the same type. We also can't retrieve values by index. Instead we refer to values of a struct with a given name.
Here's how a struct type is defined: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-68-1>)typefoodstruct{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-68-2>)namestring
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-68-3>)pricefloat64
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-68-4>)}

```

Here we've declared that any kind of `food` struct should have name and price fields.
Let's create an instance of this `food` struct to represent some actual food item.
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-69-1>)salad:=food{name:"salad",price:8.50}

```

If we want to retrieve fields from the struct, we can do so with a dot notation. Simply, write the name of the struct followed by a dot which is followed by the field name. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-70-1>)fmt.Println("%s with price %f\n",salad.name,salad.price)

```

Structs can also have functions defined on them called methods. These methods can access struct fields and can only be called from an instance of a struct. These are similar to how methods work for classes in Java.
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-71-1>)func(ffood)buy(){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-71-2>)fmt.Printf("just bought a %s for %f\n",f.name,f.price)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-71-3>)}

```

If we wanted to call this function we would use this syntax: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-72-1>)salad:=food{name:"salad",price:8.50}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-72-2>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-72-3>)salad.buy()

```

### 2.4 Control Flow
#### 2.4.1 If-Else
Just like in most other languages, Go has if statements. In Go, you don't need to specify parenthesis around the condition. The condition can be any boolean or any expression that evaluates to a boolean. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-73-1>)iftrue{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-73-2>)fmt.Println("this is true")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-73-3>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-73-4>)if2<3{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-73-5>)fmt.Println("two is less than three")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-73-6>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-73-7>)if!(1==2){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-73-8>)fmt.Println("two does not equal one")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-73-9>)}

```

We can also specify code to run if the condition in the if statement evaluates to `false`. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-74-1>)if3>2{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-74-2>)fmt.Println("three is greater than two")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-74-3>)}else{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-74-4>)fmt.Println("three is not greater than two")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-74-5>)}

```

You can also specify multiple conditions to check against. Whichever condition evalutes to `true` first will have it's block evaluated. If none of the conditions are true, the else block is evaluated. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-75-1>)num:=5
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-75-2>)ifnum<2{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-75-3>)fmt.Println("num less than 2")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-75-4>)}elseifnum<10{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-75-5>)fmt.Println("num greater than 2 and less than 10")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-75-6>)}else{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-75-7>)fmt.Println("num greater than 10")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-75-8>)}

```

#### 2.4.2 Loops
Loops are useful for repeating the same operations over and over again. Go has only one type of loop `for`. Other languages might have other types like `for-each`, `while`, `while-do`. However, `for` is flexible and can do anything other loops can.
The most basic type of `for` loop is one without a condition: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-76-1>)for{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-76-2>)fmt.Println("hello")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-76-3>)}

```

This loop will keep looping infinitely and will never terminate. Let's define some loops with a condition.
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-77-1>)isDone:=false
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-77-2>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-77-3>)for!isDone{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-77-4>)fmt.Println("finishing task")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-77-5>)isDone=true
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-77-6>)}

```

This loop will continue running until the condition is false. In this case, the condition evaluates to false after a single iteration of the loop.
We can also write standard C-style for-loops like so: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-78-1>)fori:=0;i<10;i++{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-78-2>)fmt.Println(i)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-78-3>)}

```

This loop will loop ten times. We define our iterator variable to keep track of which iteration we're on (in this case `i`). We define a terminating condition, so when this condition is false the loop will end (`i < 10`). We then define how the iterator variable should change on every iteration (i++). This `++` syntax means that we should increment the value of `i` by 1.
This loop could be rewritten with the previously mentioned style: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-79-1>)i:=0
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-79-2>)fori<10{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-79-3>)fmt.Println(i)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-79-4>)i++
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-79-5>)}

```

If we want to stop a loop before it's terminating condition is true, we can use the `break` statement.
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-80-1>)fori:=0;i<10;i++{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-80-2>)ifi==5{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-80-3>)fmt.Printf("i is %d, leaving loop now\n",i)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-80-4>)break
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-80-5>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-80-6>)fmt.Println(i)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-80-7>)}

```

We can also skip the rest of the loop body and just move onto the next iteration with the `continue` statement. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-81-1>)fori:=0;i<10;i++{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-81-2>)ifi%2==0{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-81-3>)fmt.Println("skipping even numbers")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-81-4>)continue
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-81-5>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-81-6>)fmt.Println(i)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-81-7>)}

```

One more useful application of for-loops is the ability to iterate over slices and maps.
Here's an example of us printing out every value in a slice. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-82-1>)x:=[]int{1,2,3}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-82-2>)fori,val:=rangex{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-82-3>)fmt.Printf("idx %d has val %d\n",i,val)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-82-4>)}

```

We use the range statement to iterate through the values of the slice. Notice how we have access to the index our iteration is currently on (the variable `i` in this case). We also have the value at the current index (`val` in this case). 
This type of iteration might be useful if we wanted to compute the sum of all numbers in a slice. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-83-1>)x:=[]int{1,2,3}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-83-2>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-83-3>)sum:=0
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-83-4>)for_,val:=rangex{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-83-5>)sum=sum+val
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-83-6>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-83-7>)fmt.Printf("sum is %d\n",sum)

```

We can also iterate through the keys and values of a map.
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-84-1>)x:=make(map[string]int)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-84-2>)x["one"]=1
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-84-3>)x["two"]=2
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-84-4>)x["three"]=3
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-84-5>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-84-6>)forkey,val:=rangex{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-84-7>)fmt.Printf("key %s: val %d\n",key,val)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-84-8>)}

```

#### 2.4.3 Error Handling
While error handling isn't it's own type of control flow (like if-else or for), it's ubiquitious in all Go programs that it deserves to be focused on.
When a function is executing, it may run into issues and not be able to complete it's task. In these cases, we want to exit the function early and report the error to the caller. The standard Go way of doing so is to simply return the error have the caller check it. 
Go provides an error type to indicate if an error has occured. At a high level, an error value is just a container for some error message. 
One way of creating an error is with the `fmt.Errorf` function. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-85-1>)err:=fmt.Errorf("uh oh an error happened")

```

Let's say we wanted to create a square root function and we want to consider it an error if a negative number is given as an argument.
We can check if the input is negative and return an error if so.
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-86-1>)funcsqrt(xint)(int,error){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-86-2>)ifx<0{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-86-3>)return0,fmt.Errorf("cannot get square root of negative number")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-86-4>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-86-5>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-86-6>)// implementation
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-86-7>)// ...
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-86-8>)returnresult,nil
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-86-9>)}

```

Notice how the return type changed from `int` to `(int, error)`. This is using the multiple return values idea that we talked about earlier. The first number is the result of the square root operation.
If `x` is negative, we return an error. Notice how we still have to provide a value to return for the result. The convention in Go is to ignore the first value if an error is present in the second value. This will make more sense when we look at handling errors from the caller's perspective.
Let's say we want to use our square root function. We would call it like so: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-87-1>)result,err:=sqrt(-4)

```

Ok now we have a result integer and error. What should we do with them?
We need to check the value of the error. This will tell us if it's safe to read the value of result.
The convention for checking an error in Go is to check if it is equal to `nil` or not. `nil` is just Go's way of representing a value of nothing. This is analogous to `null` in languages like Java and `None` in Python.
Checking if an error is not nil is as simple as an if-statement: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-88-1>)iferr!=nil{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-88-2>)...
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-88-3>)}

```

So if we wanted to check the error of `sqrt` we could write something like this: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-89-1>)result,err:=sqrt(-4)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-89-2>)iferr!=nil{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-89-3>)fmt.Printf("unable to calculate square root; %s\n",err.Error())
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-89-4>)return
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-89-5>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-89-6>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-89-7>)fmt.Printf("square root is %d\n",result)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-89-8>)// more computation ...

```

Notice that inside the if statement we handle the case where an error is present (where the error is not nil). This allows us to log the error and exit early (return statement). It makes sense to exit early after seeing the error since we cannot continue executing our program with an invalid square root result. Since we exit early, the rest of the code can safely use `result` and assume that it is a valid value. Notice how we can just print out the value of `result` in the last line. We already handled any potential error and now are left with a valid result.
Generally exiting early on an error is a good practice with regards to code style. Let's add a call to another function and look at how our code would look if we didn't exit early.
Instead of exiting early, let's place the error handling in the `else` block and the good path in the initial `if` block. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-90-1>)result,err:=sqrt(-4)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-90-2>)iferr==nil{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-90-3>)fmt.Printf("square root is %d\n",result)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-90-4>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-90-5>)newResult,err:=div(result,2)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-90-6>)iferr==nil{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-90-7>)fmt.Printf("division is %d\n",newResult)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-90-8>)}else{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-90-9>)fmt.Printf("unable to calculate division; %s\n",err.Error())
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-90-10>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-90-11>)}else{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-90-12>)fmt.Printf("unable to calculate square root; %s\n",err.Error())
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-90-13>)}

```

While this code is functionally fine, it means that any future computation we want to do with our results will require us to add another level of nesting to our code. This increase in nesting can make our code harder to read and follow. While this example is quite straightforward, you can imagine this getting out of hand with larger, more complex functions.
Let's see how this code would work if we used early exiting. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-91-1>)result,err:=sqrt(-4)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-91-2>)iferr!=nil{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-91-3>)fmt.Printf("unable to calculate square root; %s\n",err.Error())
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-91-4>)return
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-91-5>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-91-6>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-91-7>)fmt.Printf("square root is %d\n",result)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-91-8>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-91-9>)newResult,err:=div(result,2)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-91-10>)iferr!=nil{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-91-11>)fmt.Printf("unable to calculate division; %s\n",err.Error())
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-91-12>)return
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-91-13>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-91-14>)fmt.Printf("division is %d\n",newResult)

```

This code is easier to read since we can easily see where function goes wrong and we hit an error. It's easier to spot since the scope for error handling deviates from the rest of the code. Also, the main flow of the program where we don't hit an error is in the top-most scope. This means that we can clearly follow how the main path of execution should look like.
## 3 Hangman
Now that we're familiar with some of the fundamentals of Go, let's make a simple Hangman game.
Let's start off with an empty `main` function. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-92-1>)packagemain
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-92-2>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-92-3>)funcmain(){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-92-4>)}

```

### 3.1 User input
One of the things we need for a hangman game is to read in guesses from the player. We can do this by reading in user input text.
The `fmt` package provides functions like `Scanln` and `Scanf` which can read in user input until they hit the enter key.
We will be using `Scanln` to read in some user input.
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-93-1>)packagemain
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-93-2>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-93-3>)import(
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-93-4>)"fmt"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-93-5>)"os"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-93-6>))
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-93-7>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-93-8>)funcmain(){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-93-9>)varinputstring
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-93-10>)_,err:=fmt.Scanln(&input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-93-11>)iferr!=nil{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-93-12>)fmt.Printf("invalid user input; %s\n",err)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-93-13>)os.Exit(1)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-93-14>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-93-15>)fmt.Println(input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-93-16>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-93-17>)}

```

Let's break down how this works. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-94-1>)varinputstring

```

We declare an empty string variable where our input data will be placed. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-95-1>)_,err:=fmt.Scanln(&input)

```

We call `fmt.Scanln` to read all input until the Enter key is pressed. We pass it an argument that looks like `&input`. We haven't really talked about what the `&` sign means. We won't really need it for the rest of this tutorial but let's quickly go over it right now. The `&` symbol allows us to get a **pointer** to a variable. All variables are just some data stored in memory. Every spot in memory has an address that allows the program to access it. Getting a pointer to a variable is just getting the address where that variable is stored. Here, we are telling `Scanln` to put any user input in the memory address where our `input` variable is located at. 
You'll also notice that `fmt.Scanln` returns two values. The first is the number of items successfully scanned. The second is an error value that tells us if something went wrong. You can read more about `Scanln`, `Scan`, and `Scanf` on the official [Go doc page](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/pkg.go.dev/fmt#Scan>).
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-96-1>)iferr!=nil{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-96-2>)fmt.Printf("invalid user input; %s\n",err)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-96-3>)os.Exit(1)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-96-4>)}

```

This next section has us perform some error handling on the error that is returned from `Scanln`. Read the [section on error handling](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#243-error-handling>) to understand how the Go convention works. 
Inside the if block, we print an error message and exit the program. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-97-1>)fmt.Println(input)

```

Finally, we print out the input we received. Try running this program, enter some input, hit the enter key, and see what gets printed out. 
Let's add some prompts to instruct our user on what to do.
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-98-1>)packagemain
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-98-2>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-98-3>)import(
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-98-4>)"fmt"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-98-5>)"os"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-98-6>))
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-98-7>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-98-8>)funcmain(){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-98-9>)fmt.Println("Welcome to Hangman!")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-98-10>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-98-11>)fmt.Printf("Make a guess: ")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-98-12>)varinputstring
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-98-13>)_,err:=fmt.Scanln(&input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-98-14>)iferr!=nil{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-98-15>)fmt.Printf("invalid user input; %s\n",err)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-98-16>)os.Exit(1)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-98-17>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-98-18>)fmt.Printf("You guessed: %s\n",input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-98-19>)}

```

### 3.2 Repeating Input
Let's think about how our hangman game should work. We will have some word that the user must guess. The user will them try to guess the word via one of two ways:
  1. Guess one character at a time until they've run out of guesses
  2. Guess the entire word outright


Let's try to handle the second case and only check if the user has guessed the entire word correctly.
The first thing we need to do is to keep asking for new inputs. To keep asking for new inputs, we can wrap our input code in a `for` loop.
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-99-1>)packagemain
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-99-2>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-99-3>)import(
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-99-4>)"fmt"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-99-5>)"os"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-99-6>))
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-99-7>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-99-8>)funcmain(){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-99-9>)fmt.Println("Welcome to Hangman!")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-99-10>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-99-11>)for{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-99-12>)fmt.Printf("Make a guess: ")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-99-13>)varinputstring
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-99-14>)_,err:=fmt.Scanln(&input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-99-15>)iferr!=nil{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-99-16>)fmt.Printf("invalid user input; %s\n",err)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-99-17>)os.Exit(1)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-99-18>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-99-19>)fmt.Printf("You guessed: %s\n",input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-99-20>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-99-21>)}

```

If you run this code, you should be able to keep making guesses. However, the program will never end (unless you kill it with Ctrl-C). Let's add some condition to break out of the loop. One such condition would be to guess the correct word. If we guess the correct word, the game is over and we should exit.
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-1>)packagemain
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-2>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-3>)import(
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-4>)"fmt"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-5>)"os"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-6>))
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-7>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-8>)funcmain(){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-9>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-10>)wordToGuess:="hello"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-11>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-12>)fmt.Println("Welcome to Hangman!")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-13>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-14>)for{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-15>)fmt.Printf("Make a guess: ")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-16>)varinputstring
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-17>)_,err:=fmt.Scanln(&input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-18>)iferr!=nil{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-19>)fmt.Printf("invalid user input; %s\n",err)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-20>)os.Exit(1)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-21>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-22>)ifinput==wordToGuess{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-23>)fmt.Printf("You guessed the word %s correctly\n",wordToGuess)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-24>)return
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-25>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-26>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-100-27>)}

```

Let's also add another condition for the loop to terminate: a maximum number of guesses. If the user goes over the maximum number of guesses, the program should quit.
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-1>)packagemain
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-2>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-3>)import(
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-4>)"fmt"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-5>)"os"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-6>))
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-7>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-8>)funcmain(){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-9>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-10>)wordToGuess:="hello"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-11>)guessesLeft:=5
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-12>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-13>)fmt.Println("Welcome to Hangman!")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-14>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-15>)forguessesLeft>0{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-16>)fmt.Printf("Make a guess (%d left): ",guessesLeft)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-17>)varinputstring
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-18>)_,err:=fmt.Scanln(&input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-19>)iferr!=nil{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-20>)fmt.Printf("invalid user input; %s\n",err)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-21>)os.Exit(1)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-22>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-23>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-24>)guessesLeft--
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-25>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-26>)ifinput==wordToGuess{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-27>)fmt.Printf("You guessed the word %s correctly\n",wordToGuess)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-28>)return
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-29>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-30>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-31>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-32>)fmt.Println("You ran out of guesses and lost!")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-101-33>)}

```

Here we've declared `guessesLeft` to start off as 5. On every loop iteration, we will check that we have any guesses left with the condition `guessesLeft > 0`. Inside the loop block, we will decrement the number of guesses left with the line `guessesLeft--`. The `--` is the post-decrement operator that will decrement an integer by 1 and update it's value. 
Now we only have 5 guesses to guess the correct word. If we run out of guesses, `guessesLeft` will be 0 and we will stop iterating through the loop. We will then end up outside the loop block where we print the message `"You ran out of guesses and lost!"`.
### 3.3 Keep track of guesses
Now let's handle the other case that we mentioned above.
>   1. Guess one character at a time until they've run out of guesses
> 

To know if we have guessed the entire word, we need to keep track of which guesses we've made before. You can think of it as a history of guesses. 
There are many ways of doing this. We could create a slice and have it grow with every new guess we make. This could work and we could loop through the slice to check if we've guessed a certain character yet. However, this might not be the most ideal solution.
There are two properties which might be desirable when choosing a data structure to store these guesses:
  1. Uniqueness: We don't want to store duplicate guesses more than once.
  2. Fast lookups: We want to quickly check a given character.


Luckily for us, there is a built in data structure that satsifies both of these constraints: the Go `map` type.
As mentioned in the [section on maps](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#227-maps>), they will store key-value pairs where each key is unique. We can store a unique set of guesses if we make them the keys of our map.
Maps also give us fast lookups. We won't spend too much on this since it requires explaining things such as [time complexity](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/en.wikipedia.org/wiki/Time_complexity>). However, you should know that looking up a key in a map is a quick operation. It is much faster than iterating through a slice and checking for equality on each element of the slice.
With that said, let's set up our map. We already mentioned that the key should represent each of the user's guesses. The question that remains is: what should the map values represent? 
Well, there's really nothing else we need to store. We want to store multiple unique guesses, and that's it. So in this case, it makes sense to put a placeholder for the values of the map. We can choose any type as the placeholder since we're never going to be accessing it. I'll choose a `bool`.
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-102-1>)prevGuesses:=make(map[string]bool)

```

This is one of the quirks of Go when compared to other languages. Other languages (such as Python and C++) have built in set types. Go doesn't have such types since the `map` type can already perform the same functionality. You may see this style of thinking with other parts of the language. For such trivial things, the language designers feel that the user can quickly reimplement them instead of adding more features to the language's core libraries. For example, there is no `Contains` function to check if a value is within a slice or there was no `min` and `max` function up until [Go 1.21](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/go.dev/blog/go1.21>). If you wanted to avoid this extra `bool` map value, you could create a `Set` struct that hides the `bool` value from the programmer using the `Set`. The `Set` would have an underlying `map` and the `Set` would have methods that would update and check for for element membership within that `map`. If you want to try to make something like this, go for it! For the purposes of this tutorial we'll just deal with the awkard `bool`.
Let's place this map declaration at the top of our main function.
Let's also add in some code to populate the map with every new guess.
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-1>)packagemain
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-2>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-3>)import(
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-4>)"fmt"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-5>)"os"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-6>))
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-7>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-8>)funcmain(){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-9>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-10>)wordToGuess:="hello"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-11>)guessesLeft:=5
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-12>)prevGuesses:=make(map[string]bool)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-13>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-14>)fmt.Println("Welcome to Hangman!")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-15>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-16>)forguessesLeft>0{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-17>)fmt.Printf("Make a guess (%d left): ",guessesLeft)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-18>)varinputstring
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-19>)_,err:=fmt.Scanln(&input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-20>)iferr!=nil{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-21>)fmt.Printf("invalid user input; %s\n",err)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-22>)os.Exit(1)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-23>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-24>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-25>)guessesLeft--
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-26>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-27>)ifinput==wordToGuess{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-28>)fmt.Printf("You guessed the word %s correctly\n",wordToGuess)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-29>)return
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-30>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-31>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-32>)iflen(input)>1{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-33>)fmt.Println("You did not guess the word correctly! Try again")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-34>)continue
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-35>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-36>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-37>)prevGuesses[input]=true
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-38>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-39>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-40>)fmt.Println("You ran out of guesses and lost!")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-103-41>)}

```

Notice that we also added a new check. If the user didn't guess the word outright and tried to type out more than a single character, we print a message and tell them to retry. This ensures that we only place single character guesses into the map.
We also insert the guess into the map and give the key a value of `true`. If you recall, this `bool` is just a placeholder and it's value doesn't matter. We could've inserted a value of `false` and the behavior would've been the same.
Let's add another check to print a message if the user has already guessed a certain character. We can check if an element is in a map using the syntax we saw [earlier](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#227-maps>).
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-1>)packagemain
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-2>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-3>)import(
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-4>)"fmt"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-5>)"os"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-6>))
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-7>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-8>)funcmain(){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-9>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-10>)wordToGuess:="hello"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-11>)guessesLeft:=5
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-12>)prevGuesses:=make(map[string]bool)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-13>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-14>)fmt.Println("Welcome to Hangman!")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-15>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-16>)forguessesLeft>0{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-17>)fmt.Printf("Make a guess (%d left): ",guessesLeft)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-18>)varinputstring
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-19>)_,err:=fmt.Scanln(&input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-20>)iferr!=nil{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-21>)fmt.Printf("invalid user input; %s\n",err)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-22>)os.Exit(1)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-23>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-24>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-25>)guessesLeft--
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-26>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-27>)ifinput==wordToGuess{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-28>)fmt.Printf("You guessed the word %s correctly\n",wordToGuess)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-29>)return
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-30>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-31>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-32>)iflen(input)>1{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-33>)fmt.Println("You did not guess the word correctly! Try again")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-34>)continue
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-35>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-36>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-37>)_,ok:=prevGuesses[input]
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-38>)ifok{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-39>)fmt.Printf("You already guessed %s! Try again\n",input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-40>)continue
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-41>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-42>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-43>)prevGuesses[input]=true
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-44>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-45>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-46>)fmt.Println("You ran out of guesses and lost!")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-104-47>)}

```

Let's also change the program to not punish the user for guessing duplicate characters. Let's only decrement the number of guesses left when they guess an incorrect word or guess a new character. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-1>)packagemain
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-2>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-3>)import(
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-4>)"fmt"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-5>)"os"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-6>))
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-7>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-8>)funcmain(){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-9>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-10>)wordToGuess:="hello"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-11>)guessesLeft:=5
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-12>)prevGuesses:=make(map[string]bool)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-13>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-14>)fmt.Println("Welcome to Hangman!")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-15>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-16>)forguessesLeft>0{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-17>)fmt.Printf("Make a guess (%d left): ",guessesLeft)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-18>)varinputstring
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-19>)_,err:=fmt.Scanln(&input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-20>)iferr!=nil{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-21>)fmt.Printf("invalid user input; %s\n",err)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-22>)os.Exit(1)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-23>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-24>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-25>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-26>)ifinput==wordToGuess{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-27>)fmt.Printf("You guessed the word %s correctly\n",wordToGuess)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-28>)return
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-29>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-30>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-31>)iflen(input)>1{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-32>)guessesLeft--
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-33>)fmt.Println("You did not guess the word correctly! Try again")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-34>)continue
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-35>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-36>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-37>)_,ok:=prevGuesses[input]
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-38>)ifok{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-39>)fmt.Printf("You already guessed %s! Try again\n",input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-40>)continue
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-41>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-42>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-43>)guessesLeft--
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-44>)prevGuesses[input]=true
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-45>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-46>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-47>)fmt.Println("You ran out of guesses and lost!")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-105-48>)}

```

Ok now let's check if the user has guessed the entire word yet. After they input a new character we should check if they've guessed every character. Let's make a new function to describe this functionality.
You can define this function right below our main function. Let's call it `guessedEntireWord`
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-106-1>)funcguessedEntireWord(){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-106-2>)}

```

Now we need to think about what inputs and outputs this function should have. 
We know the output should be a `bool`. A `true` value would tell us that the entire word has been guessed and the game should end. `false` would mean that the word hasn't been guessed yet and that the game should continue. 
The inputs should be the word we're trying to guess and the guesses we've previously made.
We can make our function look something like this: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-107-1>)funcguessedEntireWord(wordstring,guessesmap[string]bool)bool{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-107-2>)returnfalse
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-107-3>)}

```

Inside this function we need to look at every letter of the word and see if we've guessed it before. If one of the letters of the word doesn't appear in our previous guesses, we know that we haven't guessed the entire word and can return `false`.
We can use the Go `for` loop to iterate through characters of a string (similar to how we iterated through elements of a slice with `range` over [here](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<http:/localhost:8000/wiki/software/onboarding/level_0/level_0_go/#242-loops>))
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-108-1>)funcguessedEntireWord(wordstring,guessesmap[string]bool)bool{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-108-2>)for_,char:=rangeword{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-108-3>)_,ok:=guesses[char]
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-108-4>)if!ok{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-108-5>)returnfalse
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-108-6>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-108-7>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-108-8>)returntrue
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-108-9>)}

```

Ok so this code is iterating through every character in the word we're trying to guess. For each character, we check to see if we've guessed it before. If we haven't guessed the character before, we exit out of the function and return `false`. If all the characters of the word have been guessed, we then return `true`.
Let's call our newly made function inside our main program and print out a message accordingly. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-1>)packagemain
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-2>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-3>)import(
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-4>)"fmt"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-5>)"os"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-6>))
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-7>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-8>)funcmain(){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-9>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-10>)wordToGuess:="hello"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-11>)guessesLeft:=5
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-12>)prevGuesses:=make(map[string]bool)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-13>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-14>)fmt.Println("Welcome to Hangman!")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-15>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-16>)forguessesLeft>0{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-17>)fmt.Printf("Make a guess (%d left): ",guessesLeft)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-18>)varinputstring
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-19>)_,err:=fmt.Scanln(&input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-20>)iferr!=nil{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-21>)fmt.Printf("invalid user input; %s\n",err)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-22>)os.Exit(1)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-23>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-24>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-25>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-26>)ifinput==wordToGuess{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-27>)fmt.Printf("You guessed the word %s correctly\n",wordToGuess)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-28>)return
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-29>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-30>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-31>)iflen(input)>1{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-32>)guessesLeft--
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-33>)fmt.Println("You did not guess the word correctly! Try again")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-34>)continue
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-35>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-36>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-37>)_,ok:=prevGuesses[input]
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-38>)ifok{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-39>)fmt.Printf("You already guessed %s! Try again\n",input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-40>)continue
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-41>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-42>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-43>)guessesLeft--
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-44>)prevGuesses[input]=true
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-45>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-46>)ifguessedEntireWord(wordToGuess,prevGuesses){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-47>)fmt.Printf("You guessed the word %s correctly\n",wordToGuess)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-48>)return
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-49>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-50>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-51>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-52>)fmt.Println("You ran out of guesses and lost!")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-53>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-54>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-55>)funcguessedEntireWord(wordstring,guessesmap[string]bool)bool{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-56>)for_,char:=rangeword{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-57>)_,ok:=guesses[char]
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-58>)if!ok{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-59>)returnfalse
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-60>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-61>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-62>)returntrue
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-109-63>)}

```

If you try to compile your program with this code, you will notice that it won't compile. You should get a compile error like this.
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-110-1>)./main.go:57:26: cannot use char (variable of type rune) as type string in map index

```

This error arises from the fact that when we loop through the characters of a `string` with `range`, we don't get a `string` type back. Go has another type that we didn't go over called `rune`. A `rune` is just a single character. Since we get back a `rune` from looping over the `string`, we can't use this `rune` as the key when looking up in a `map` of type `map[string]bool`. Our map expects keys to be of type `string`. 
We have two options for how to handle this:
  1. Convert our `rune` to a `string` for the key lookup
  2. Change the type of our map to use a `rune` as it's key type


Here is the modification for option 1: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-111-1>)funcguessedEntireWord(wordstring,guessesmap[string]bool)bool{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-111-2>)for_,char:=rangeword{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-111-3>)_,ok:=guesses[string(char)]
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-111-4>)if!ok{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-111-5>)returnfalse
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-111-6>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-111-7>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-111-8>)returntrue
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-111-9>)}

```

For the purposes of this tutorial, we'll only go over option 1. Option 2 is certainly something you could implement and it would make more sense since we only want to store single character guesses.
Let's also create another function which will tell us how many times the character guessed appears in the word. This is useful so we can decrement the number of guesses only when the user guesses a character incorrectly. 
Given a word and a guessed character, we need to check how many times a character appears in a word. We can create a counter and increment it whenever we see an equivalent character. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-112-1>)funcgetNumOccurences(wordstring,guessstring)int{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-112-2>)numTimes:=0
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-112-3>)for_,char:=rangeword{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-112-4>)ifstring(char)==guess{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-112-5>)numTimes++
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-112-6>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-112-7>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-112-8>)returnnumTimes
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-112-9>)}

```

Let's add it to our program:
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-1>)packagemain
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-2>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-3>)import(
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-4>)"fmt"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-5>)"os"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-6>))
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-7>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-8>)funcmain(){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-9>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-10>)wordToGuess:="hello"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-11>)guessesLeft:=5
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-12>)prevGuesses:=make(map[string]bool)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-13>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-14>)fmt.Println("Welcome to Hangman!")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-15>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-16>)forguessesLeft>0{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-17>)fmt.Printf("Make a guess (%d left): ",guessesLeft)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-18>)varinputstring
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-19>)_,err:=fmt.Scanln(&input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-20>)iferr!=nil{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-21>)fmt.Printf("invalid user input; %s\n",err)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-22>)os.Exit(1)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-23>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-24>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-25>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-26>)ifinput==wordToGuess{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-27>)fmt.Printf("You guessed the word %s correctly\n",wordToGuess)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-28>)return
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-29>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-30>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-31>)iflen(input)>1{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-32>)guessesLeft--
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-33>)fmt.Println("You did not guess the word correctly! Try again")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-34>)continue
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-35>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-36>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-37>)_,ok:=prevGuesses[input]
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-38>)ifok{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-39>)fmt.Printf("You already guessed %s! Try again\n",input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-40>)continue
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-41>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-42>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-43>)prevGuesses[input]=true
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-44>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-45>)ifguessedEntireWord(wordToGuess,prevGuesses){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-46>)fmt.Printf("You guessed the word %s correctly\n",wordToGuess)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-47>)return
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-48>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-49>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-50>)ifgetNumOccurences(wordToGuess,input)<1{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-51>)guessesLeft--
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-52>)fmt.Printf("Incorrect. %s is not in the word\n",input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-53>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-54>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-55>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-56>)fmt.Println("You ran out of guesses and lost!")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-57>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-58>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-59>)funcguessedEntireWord(wordstring,guessesmap[string]bool)bool{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-60>)for_,char:=rangeword{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-61>)_,ok:=guesses[char]
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-62>)if!ok{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-63>)returnfalse
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-64>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-65>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-66>)returntrue
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-67>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-68>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-69>)funcgetNumOccurences(wordstring,guessstring)int{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-70>)numTimes:=0
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-71>)for_,char:=rangeword{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-72>)ifstring(char)==guess{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-73>)numTimes++
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-74>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-75>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-76>)returnnumTimes
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-113-77>)}

```

Ok now we should have a working Hangman game. Try to type the letters of "hello" one by one.
Now, we can focus on making our game prettier and a few more quality of life features.
### 3.4 Printing out game state
Let's add a print out on every turn to tell the user which characters they've guessed already.
Let's say we're trying to guess `hello` and we've guessed `"h"` and `"l"`. It should look something like this: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-114-1>)h _ l l _

```

Let's break down this problem. We want to print out a bunch of characters. The characters should be either `_` or the actual letter of the word depending on if we've guessed it before.
This should look similar to our `guessedEntireWord` function. We can loop through each of the characters of the word to guess. If we've already guessed a character, we can print it out. If a character hasn't been guessed, print `_` in it's place. 
For this function, we won't print out a new character on every iteration but will collect them into a single string that gets printed out at the end.
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-115-1>)funcprintGameState(wordstring,guessesmap[string]bool){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-115-2>)gameState:=""
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-115-3>)for_,char:=rangeword{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-115-4>)_,ok:=guesses[string(char)]
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-115-5>)ifok{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-115-6>)gameState=gameState+string(char)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-115-7>)}else{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-115-8>)gameState=gameState+"_"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-115-9>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-115-10>)gameState=gameState+" "
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-115-11>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-115-12>)fmt.Println(gameState)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-115-13>)}

```

If you [remember](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#224-strings>), the `+` operator is defined on strings to do concatenation. So we concatenate our previous games state with our new character either `_` or a character from the word. We then re-assign our `gameState` to reflect this updated value.
We also concatenate a space between every character for formatting reasons.
Ok now let's call this function at the end of every turn. Our program should look something like this:
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-1>)packagemain
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-2>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-3>)import(
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-4>)"fmt"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-5>)"os"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-6>))
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-7>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-8>)funcmain(){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-9>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-10>)wordToGuess:="hello"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-11>)guessesLeft:=5
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-12>)prevGuesses:=make(map[string]bool)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-13>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-14>)fmt.Println("Welcome to Hangman!")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-15>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-16>)forguessesLeft>0{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-17>)fmt.Printf("Make a guess (%d left): ",guessesLeft)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-18>)varinputstring
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-19>)_,err:=fmt.Scanln(&input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-20>)iferr!=nil{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-21>)fmt.Printf("invalid user input; %s\n",err)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-22>)os.Exit(1)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-23>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-24>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-25>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-26>)ifinput==wordToGuess{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-27>)fmt.Printf("You guessed the word %s correctly\n",wordToGuess)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-28>)return
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-29>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-30>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-31>)iflen(input)>1{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-32>)guessesLeft--
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-33>)fmt.Println("You did not guess the word correctly! Try again")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-34>)continue
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-35>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-36>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-37>)_,ok:=prevGuesses[input]
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-38>)ifok{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-39>)fmt.Printf("You already guessed %s! Try again\n",input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-40>)continue
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-41>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-42>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-43>)prevGuesses[input]=true
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-44>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-45>)ifguessedEntireWord(wordToGuess,prevGuesses){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-46>)fmt.Printf("You guessed the word %s correctly\n",wordToGuess)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-47>)return
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-48>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-49>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-50>)ifgetNumOccurences(wordToGuess,input)<1{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-51>)guessesLeft--
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-52>)fmt.Printf("Incorrect. %s is not in the word\n",input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-53>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-54>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-55>)printGameState(wordToGuess,prevGuesses)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-56>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-57>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-58>)fmt.Println("You ran out of guesses and lost!")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-59>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-60>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-61>)funcguessedEntireWord(wordstring,guessesmap[string]bool)bool{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-62>)for_,char:=rangeword{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-63>)_,ok:=guesses[string(char)]
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-64>)if!ok{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-65>)returnfalse
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-66>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-67>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-68>)returntrue
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-69>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-70>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-71>)funcgetNumOccurences(wordstring,guessstring)int{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-72>)numTimes:=0
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-73>)for_,char:=rangeword{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-74>)ifstring(char)==guess{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-75>)numTimes++
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-76>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-77>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-78>)returnnumTimes
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-79>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-80>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-81>)funcprintGameState(wordstring,guessesmap[string]bool){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-82>)gameState:=""
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-83>)for_,char:=rangeword{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-84>)_,ok:=guesses[string(char)]
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-85>)ifok{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-86>)gameState=gameState+string(char)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-87>)}else{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-88>)gameState=gameState+"_"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-89>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-90>)gameState=gameState+" "
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-91>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-92>)fmt.Println(gameState)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-116-93>)}

```

Try to play the game now. You should see the spots of the word getting filled in as you keep guessingcorrectly.
![hangman](https://drive.google.com/uc?export=view&id=1uSKl7fWoUMfGmsXxXGI317DauCTkHsvD)
### 3.5 Randomize words
Ok let's make our game a bit more versatile. Instead of only guessing `hello` over and over again, let's have our program choose a random word from a word bank. 
Let's define a word bank of multiple words as a slice. 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-117-1>)words:=[]string{"hello","suspicious","tuas"}

```

Now let's choose one of these words at random. To select one of the words we can select a random index and use that index to access one of the slice elements. This means that we need a random integer between 0 and the number of words we have. 
Here's the code for generating a random number from `0` to `len(words)`. We won't touch on exactly how this works. Just know that our randomness depends on the seed. If our seed is the same between two calls to generate a random number, the numbers will be the same. This is why we set our seed to something that will change between each call (such as the current timestamp). 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-118-1>)words:=[]string{"hello","suspicious","tuas"}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-118-2>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-118-3>)rand.Seed(time.Now().Unix())
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-118-4>)wordToGuess:=words[rand.Intn(len(words))]

```

There's a lot going on here. Let's break it down. 
We setup as our seed to be the current unix timestamp, as we mentioned (note that we need to import the `"time"` package). We then get our random index (from 0 to len(words) exclusive). The random index is then used to index into the `words` slice and get a word string.
Let's substitute our hardcoded `wordToGuess := "hello"` with this new randomization:
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-1>)packagemain
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-2>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-3>)import(
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-4>)"fmt"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-5>)"math/rand"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-6>)"os"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-7>)"time"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-8>))
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-9>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-10>)funcmain(){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-11>)words:=[]string{"hello","suspicious","tuas"}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-12>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-13>)rand.Seed(time.Now().Unix())
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-14>)wordToGuess:=words[rand.Intn(len(words))]
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-15>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-16>)guessesLeft:=5
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-17>)prevGuesses:=make(map[string]bool)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-18>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-19>)fmt.Println("Welcome to Hangman!")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-20>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-21>)forguessesLeft>0{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-22>)fmt.Printf("Make a guess (%d left): ",guessesLeft)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-23>)varinputstring
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-24>)_,err:=fmt.Scanln(&input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-25>)iferr!=nil{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-26>)fmt.Printf("invalid user input; %s\n",err)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-27>)os.Exit(1)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-28>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-29>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-30>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-31>)ifinput==wordToGuess{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-32>)fmt.Printf("You guessed the word %s correctly\n",wordToGuess)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-33>)return
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-34>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-35>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-36>)iflen(input)>1{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-37>)fmt.Println("You did not guess the word correctly! Try again")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-38>)continue
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-39>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-40>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-41>)_,ok:=prevGuesses[input]
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-42>)ifok{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-43>)fmt.Printf("You already guessed %s! Try again\n",input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-44>)continue
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-45>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-46>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-47>)prevGuesses[input]=true
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-48>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-49>)ifguessedEntireWord(wordToGuess,prevGuesses){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-50>)fmt.Printf("You guessed the word %s correctly\n",wordToGuess)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-51>)return
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-52>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-53>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-54>)ifgetNumOccurences(wordToGuess,input)<1{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-55>)guessesLeft--
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-56>)fmt.Printf("Incorrect. %s is not in the word\n",input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-57>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-58>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-59>)printGameState(wordToGuess,prevGuesses)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-60>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-61>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-62>)fmt.Println("You ran out of guesses and lost!")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-63>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-64>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-65>)funcguessedEntireWord(wordstring,guessesmap[string]bool)bool{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-66>)for_,char:=rangeword{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-67>)_,ok:=guesses[string(char)]
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-68>)if!ok{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-69>)returnfalse
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-70>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-71>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-72>)returntrue
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-73>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-74>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-75>)funcprintGameState(wordstring,guessesmap[string]bool){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-76>)gameState:=""
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-77>)for_,char:=rangeword{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-78>)_,ok:=guesses[string(char)]
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-79>)ifok{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-80>)gameState=gameState+string(char)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-81>)}else{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-82>)gameState=gameState+"_"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-83>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-84>)gameState=gameState+" "
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-85>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-86>)fmt.Println(gameState)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-87>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-88>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-89>)funcgetNumOccurences(wordstring,guessstring)int{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-90>)numTimes:=0
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-91>)for_,char:=rangeword{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-92>)ifstring(char)==guess{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-93>)numTimes++
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-94>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-95>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-96>)returnnumTimes
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-119-97>)}

```

There is one problem with this version of the program: we might have a word longer than our maximum number of guesses of 5. There are many ways we can handle this. For the purpose of this tutorial, I'll give the user one guess for each character in the word.
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-120-1>)words:=[]string{"hello","suspicious","tuas"}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-120-2>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-120-3>)rand.Seed(time.Now().Unix())
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-120-4>)wordToGuess:=words[rand.Intn(len(words))]
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-120-5>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-120-6>)guessesLeft:=len(wordToGuess)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-120-7>)prevGuesses:=make(map[string]bool)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-120-8>)...

```

With that, we have the final version of our game: 
```
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-1>)packagemain
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-2>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-3>)import(
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-4>)"fmt"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-5>)"math/rand"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-6>)"os"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-7>)"time"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-8>))
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-9>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-10>)funcmain(){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-11>)words:=[]string{"hello","suspicious","tuas"}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-12>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-13>)rand.Seed(time.Now().Unix())
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-14>)wordToGuess:=words[rand.Intn(len(words))]
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-15>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-16>)guessesLeft:=len(wordToGuess)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-17>)prevGuesses:=make(map[string]bool)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-18>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-19>)fmt.Println("Welcome to Hangman!")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-20>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-21>)forguessesLeft>0{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-22>)fmt.Printf("Make a guess (%d left): ",guessesLeft)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-23>)varinputstring
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-24>)_,err:=fmt.Scanln(&input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-25>)iferr!=nil{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-26>)fmt.Printf("invalid user input; %s\n",err)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-27>)os.Exit(1)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-28>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-29>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-30>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-31>)ifinput==wordToGuess{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-32>)fmt.Printf("You guessed the word %s correctly\n",wordToGuess)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-33>)return
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-34>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-35>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-36>)iflen(input)>1{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-37>)fmt.Println("You did not guess the word correctly! Try again")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-38>)continue
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-39>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-40>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-41>)_,ok:=prevGuesses[input]
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-42>)ifok{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-43>)fmt.Printf("You already guessed %s! Try again\n",input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-44>)continue
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-45>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-46>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-47>)prevGuesses[input]=true
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-48>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-49>)ifguessedEntireWord(wordToGuess,prevGuesses){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-50>)fmt.Printf("You guessed the word %s correctly\n",wordToGuess)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-51>)return
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-52>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-53>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-54>)ifgetNumOccurences(wordToGuess,input)<1{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-55>)guessesLeft--
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-56>)fmt.Printf("Incorrect. %s is not in the word\n",input)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-57>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-58>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-59>)printGameState(wordToGuess,prevGuesses)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-60>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-61>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-62>)fmt.Println("You ran out of guesses and lost!")
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-63>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-64>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-65>)funcguessedEntireWord(wordstring,guessesmap[string]bool)bool{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-66>)for_,char:=rangeword{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-67>)_,ok:=guesses[string(char)]
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-68>)if!ok{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-69>)returnfalse
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-70>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-71>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-72>)returntrue
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-73>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-74>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-75>)funcprintGameState(wordstring,guessesmap[string]bool){
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-76>)gameState:=""
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-77>)for_,char:=rangeword{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-78>)_,ok:=guesses[string(char)]
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-79>)ifok{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-80>)gameState=gameState+string(char)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-81>)}else{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-82>)gameState=gameState+"_"
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-83>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-84>)gameState=gameState+" "
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-85>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-86>)fmt.Println(gameState)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-87>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-88>)
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-89>)funcgetNumOccurences(wordstring,guessstring)int{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-90>)numTimes:=0
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-91>)for_,char:=rangeword{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-92>)ifstring(char)==guess{
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-93>)numTimes++
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-94>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-95>)}
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-96>)returnnumTimes
[](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/#__codelineno-121-97>)}

```

Of course, there are many ways you could improve this game. But this should be a good exercise for you to get a tour of Go types, control flow and idioms. 
## Resources
  * [A Tour of Go](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/go.dev/tour/welcome/1>)
  * [Go by Example](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/gobyexample.com/>)
  * [100 Go Mistakes and How to Avoid Them](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/100go.co/>)
  * [Effective Go](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/go.dev/doc/effective_go>)

October 3, 2023
Back to top 
Made with [ Material for MkDocs ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/squidfunk.github.io/mkdocs-material/>)
[ ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/github.com/tritonuas> "github.com") [ ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/gitlab.com/tuas> "gitlab.com") [ ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/hub.docker.com/orgs/tritonuas> "hub.docker.com") [ ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/medium.com/tuas> "medium.com") [ ](https://tritonuas.github.io/wiki/software/onboarding/level_0/level_0_go/<https:/facebook.com/tritonuas> "facebook.com")
