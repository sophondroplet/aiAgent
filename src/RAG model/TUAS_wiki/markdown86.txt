[ Skip to content ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#computer-vision-reference>)
[ ![logo](https://tritonuas.com/wiki/assets/tuas_2020_favicon_white.svg) ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/> "TritonUAS Wiki")
TritonUAS Wiki 
Computer Vision 
Initializing search 
[ GitHub  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/github.com/tritonuas/wiki/> "Go to repository")
  * [ Home ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/>)
  * [ General ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/general/town_hall_notes/>)
  * [ Onboarding ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/onboarding/foam_aircraft_project/>)
  * [ Hardware ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/hardware/wings/>)
  * [ Mechanical ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/mechanical/mechanical_home/>)
  * [ Electrical ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/electrical/electrical-overview/>)
  * [ Software ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/software_home/>)


[ ![logo](https://tritonuas.com/wiki/assets/tuas_2020_favicon_white.svg) ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/> "TritonUAS Wiki") TritonUAS Wiki 
[ GitHub  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/github.com/tritonuas/wiki/> "Go to repository")
  * [ Home  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/>)
  * General  General 
    * [ Town Hall Notes  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/general/town_hall_notes/>)
    * [ Test Flight  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/general/test_flight/>)
    * [ Repo Guide  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/general/repo_guide/>)
    * [ Useful Links  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/general/links/>)
    * [ Wiki Editing  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/general/wiki_editing/>)
    * [ Website Editing  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/general/website_editing/>)
  * Onboarding  Onboarding 
    * [ Foam Aircraft Project  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/onboarding/foam_aircraft_project/>)
    * [ Servos  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/onboarding/servos/>)
  * Hardware  Hardware 
    * [ Wings  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/hardware/wings/>)
    * [ Fuselage  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/hardware/fuselage/>)
    * [ VTOL  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/hardware/vtol/>)
    * [ Camera Gimbal  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/hardware/camera_gimbal/>)
    * [ Payload  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/hardware/payload/>)
    * [ GCS  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/hardware/gcs/>)
  * Mechanical  Mechanical 
    * [ Mechanical Home  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/mechanical/mechanical_home/>)
    * Competition Planes  Competition Planes 
      * [ Toothless  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/mechanical/toothless/toothless/>)
      * [ Duckasaurus  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/mechanical/duckasaurus/duckasaurus/>)
    * Onboarding Projects  Onboarding Projects 
      * [ The Marius  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/mechanical/onboarding-projects/the_marius/>)
    * Manufacturing  Manufacturing 
      * [ Overview  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/mechanical/manufacturing/manufacturing_overview/>)
      * [ Mold Manufacturing  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/mechanical/manufacturing/Mold_Manufacturing/>)
      * [ CNC Hot Wire Cutter  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/mechanical/manufacturing/CNC_hot_wire/>)
    * Design/Analysis  Design/Analysis 
      * [ Overview  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/mechanical/design-analysis/overview/>)
      * Optimization  Optimization 
        * [ Overview  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/mechanical/optimization/optimization_overview/>)
    * Tutorials  Tutorials 
      * [ Solidworks  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/mechanical/tutorials/solidworks/>)
      * [ Ansys  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/mechanical/tutorials/ansys/>)
      * [ Matlab/Optimization  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/mechanical/tutorials/matlab-optimization/>)
    * [ Mechanical Packing List  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/mechanical/packing_list/>)
  * Electrical  Electrical 
    * [ Electrical Overview  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/electrical/electrical-overview/>)
    * [ Electronics Diagram  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/electrical/electronics-diagram/>)
    * Projects  Projects 
      * Airdrop  Airdrop 
        * [ Overview  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/electrical/projects/airdrop/overview/>)
        * [ Mechanism  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/electrical/projects/airdrop/drop_mechanism/>)
        * [ GPIO Setup  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/electrical/projects/airdrop/GPIO_setup/>)
        * [ Drop Calculation  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/electrical/projects/airdrop/drop_script/>)
      * [ Antenna Tracker  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/electrical/projects/antenna-tracker/>)
      * [ Power Board  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/electrical/projects/power-board/>)
      * Signals Board  Signals Board 
        * [ Overview  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/electrical/projects/signals-board/signals-board/>)
        * [ Sensor Input  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/electrical/projects/signals-board/sensor-input/>)
        * [ Signals Board Code  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/electrical/projects/signals-board/sigboard-code/>)
        * [ Signals Board Requirements  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/electrical/projects/signals-board/sigboard-reqs/>)
    * Communication  Communication 
      * [ CAN  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/electrical/communication/can/>)
      * [ I2C  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/electrical/communication/i2c/>)
      * [ MAVLink  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/electrical/communication/mavlink/>)
      * [ UART  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/electrical/communication/uart/>)
      * [ Wireless Communication  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/electrical/communication/wireless-comms/>)
    * Other Tutorials  Other Tutorials 
      * [ Fabrication  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/electrical/other-tutorials/fabrication/>)
      * [ Ardupilot/Pixhawk  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/electrical/other-tutorials/ardupilot-pixhawk/>)
  * Software  Software 
    * [ Software Home  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/software_home/>)
    * [ How to Contribute  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/how_to_contribute/>)
    * Reference  Reference 
      * [ Git  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/git/>)
      * Computer Vision  [ Computer Vision  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/>) Table of contents 
        * [ Resources  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#resources>)
          * [ Fundamental Math  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#fundamental-math>)
          * [ Computer Vision Fundamentals  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#computer-vision-fundamentals>)
          * [ Deep Neural Networks  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#deep-neural-networks>)
          * [ Coursera  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#coursera>)
          * [ Pytorch  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#pytorch>)
          * [ Ram  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#ram>)
        * [ Coding cheat sheet  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#coding-cheat-sheet>)
          * [ Primary image objects  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#primary-image-objects>)
          * [ Reading/opening images  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#readingopening-images>)
          * [ Writing images to disk  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#writing-images-to-disk>)
          * [ Converting between image objects  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#converting-between-image-objects>)
          * [ Converting between colorspaces  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#converting-between-colorspaces>)
            * [ OpenCV  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#opencv>)
      * [ Datahub  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/datahub/>)
    * GCS  GCS 
      * [ Overview  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/gcs/gcs_overview/>)
      * [ Configuration  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/gcs/gcs_configuration/>)
      * Frontend  Frontend 
        * [ Overview  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/gcs/frontend/frontend_overview/>)
        * [ Pages  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/gcs/frontend/frontend_pages/>)
      * Backend  Backend 
        * [ Overview  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/gcs/backend/backend_overview/>)
        * [ Endpoints  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/gcs/backend/backend_endpoints/>)
    * OBC  OBC 
      * [ Overview  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/obc/obc_overview/>)
      * Pathing  Pathing 
        * [ RRT-Star  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/obc/pathing/rrt-star/>)
        * [ Coverage  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/obc/pathing/coverage/>)
      * Tick Architecture  Tick Architecture 
        * [ Overview  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/obc/tick_architecture/tick_overview/>)
        * [ Guide  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/obc/tick_architecture/guide/>)
        * Ticks  Ticks 
          * [ Mission Prep  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/obc/tick_architecture/ticks/missionprep/>)
          * [ Path Gen  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/obc/tick_architecture/ticks/pathgen/>)
          * [ Path Validate  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/obc/tick_architecture/ticks/pathvalidate/>)
          * [ Mav Upload  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/obc/tick_architecture/ticks/mavupload/>)
          * [ Takeoff  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/obc/tick_architecture/ticks/takeoff/>)
          * [ Fly Waypoints  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/obc/tick_architecture/ticks/flywaypoints/>)
          * [ Fly Search  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/obc/tick_architecture/ticks/flysearch/>)
          * [ CV Loiter  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/obc/tick_architecture/ticks/cvloiter/>)
          * [ Airdrop Prep  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/obc/tick_architecture/ticks/airdropprep/>)
          * [ Airdrop Approach  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/obc/tick_architecture/ticks/airdropapproach/>)
          * [ Manual Landing  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/obc/tick_architecture/ticks/manuallanding/>)
          * [ Auto Landing  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/obc/tick_architecture/ticks/autolanding/>)
          * [ Mission Done  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/obc/tick_architecture/ticks/missiondone/>)
    * Target Detection Team  Target Detection Team 
      * [ Overview  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/target_detection_team/target_detection_overview/>)
      * [ Saliency  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/target_detection_team/saliency/>)
      * [ Segmentation  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/target_detection_team/segmentation/>)
      * [ Classification  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/target_detection_team/classification/>)
    * Localization  Localization 
      * [ Overview  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/localization/localization_overview/>)
    * Dataset Generation  Dataset Generation 
      * [ Overview  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/dataset_generation/dataset_generation_overview/>)
    * Workshops  Workshops 
      * [ Overview  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/workshops/workshops_overview/>)
      * Contents  Contents 
        * [ 01. Unix/Command Line  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/workshops/contents/01_unix_basics/>)
        * [ 02. Git/GitHub  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/workshops/contents/02_git_deep_dive/>)
        * [ 03. HTTP/REST  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/workshops/contents/03_http_and_rest/>)
        * [ 04. Docker  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/workshops/contents/04_docker/>)
        * [ 05. Pointers  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/workshops/contents/05_pointers/>)
        * [ 06. Unit Tests  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/workshops/contents/06_unit_tests/>)
        * [ 07. Design Patterns  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/workshops/contents/07_design_patterns/>)
        * [ 08. Async Programming  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/workshops/contents/08_async_programming/>)
        * [ 09. Continuous Integration  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/workshops/contents/09_continuous_integration/>)
    * Onboarding  Onboarding 
      * [ Overview  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/onboarding/onboarding_overview/>)
      * Level 0  Level 0 
        * [ Overview  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_overview/>)
        * [ Python Tutorial  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_python/>)
        * [ Go Tutorial  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_go/>)
        * [ C++ Tutorial  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/onboarding/level_0/level_0_cpp/>)
      * Level 1  Level 1 
        * [ Overview  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/onboarding/level_1/level_1_overview/>)
      * Level 2  Level 2 
        * [ Overview  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/onboarding/level_2/level_2_overview/>)
    * Miscellaneous  Miscellaneous 
      * [ Design Proposals  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/misc/design_review/>)
      * [ Nanostation Setup  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/misc/nanostations/>)
      * [ Passwords  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/misc/passwords/>)
      * [ Test Flight Checklist  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/misc/test_flight_checklist/>)


Table of contents 
  * [ Resources  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#resources>)
    * [ Fundamental Math  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#fundamental-math>)
    * [ Computer Vision Fundamentals  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#computer-vision-fundamentals>)
    * [ Deep Neural Networks  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#deep-neural-networks>)
    * [ Coursera  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#coursera>)
    * [ Pytorch  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#pytorch>)
    * [ Ram  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#ram>)
  * [ Coding cheat sheet  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#coding-cheat-sheet>)
    * [ Primary image objects  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#primary-image-objects>)
    * [ Reading/opening images  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#readingopening-images>)
    * [ Writing images to disk  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#writing-images-to-disk>)
    * [ Converting between image objects  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#converting-between-image-objects>)
    * [ Converting between colorspaces  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#converting-between-colorspaces>)
      * [ OpenCV  ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#opencv>)


# Computer Vision Reference
## Resources
### Fundamental Math
  * Linear Algebra:
    * [this](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/www.coursera.org/learn/linear-algebra-machine-learning>) or [this](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/www.ucsd.edu/catalog/courses/MATH.html>)
  * Vector Calculus:
    * [this](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/www.coursera.org/learn/multivariate-calculus-machine-learning>) or [this](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/www.ucsd.edu/catalog/courses/MATH.html>)


### Computer Vision Fundamentals
  * [CS131](https://tritonuas.github.io/wiki/software/reference/computer_vision/<http:/vision.stanford.edu/teaching/cs131_fall1920/index.html>) : Computer Vision - Foundations and Applications


### Deep Neural Networks
  * The Deep Learning [Book](https://tritonuas.github.io/wiki/software/reference/computer_vision/<http:/www.deeplearningbook.org/>)
  * Gradient Descent [cheatsheet](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/ml-cheatsheet.readthedocs.io/en/latest/gradient_descent.html>)
  * [CS230](https://tritonuas.github.io/wiki/software/reference/computer_vision/<http:/cs230.stanford.edu/>) : Deep Learning
  * [CS231n](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/cs231n.github.io/>) : Convolutional Neural Networks for Visual Recognition


### Coursera
  * Machine Learning by [Andrew Ng](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/www.coursera.org/learn/machine-learning>)


### Pytorch
We mainly use Pytorch because it has a very low learning curve and simplifies a large amount of neural network infrastructure building. Also, it's taught at UCSD in ML courses, which lets people apply skills learned in class to a project.
  * Pytorch has some very good [tutorials](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/pytorch.org/tutorials/>) to learn from
  * [60 minute intro to ML](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/pytorch.org/tutorials/beginner/deep_learning_60min_blitz.html>): This is a good starting point, it gives an overview of how Pytorch tensors work, how autograd does all the heavy lifting, and the training process for a classifier.
  * [Transfer Learning](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/pytorch.org/tutorials/beginner/transfer_learning_tutorial.html>): Networks taking too long to train? Not enough data? Use someone else's network!


### Ram
Computer Vision can be very RAM heavy, so just [download more RAM](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/downloadmoreram.com/>)
## Coding cheat sheet
Detailed below are very common functions used across all of computer vision for manipulating images and more.
Here are the imports for the shorthand we use
```
[](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#__codelineno-0-1>)import cv2 # OpenCV
[](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#__codelineno-0-2>)import numpy as np # numpy
[](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#__codelineno-0-3>)from PIL import Image # PIL
[](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#__codelineno-0-4>)import torch # PyTorch
[](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#__codelineno-0-5>)import torchvision.transforms as transforms # PyTorch transforms

```

### Primary image objects
`numpy` object (OpenCV)
  * IMPORTANT NOTE: OpenCV reads images as BGR!
  * Channel values are unsigned 8-bit ints (UINT8)


`Image` object (PIL)
  * Channel values are floats in [0,1]


`Tensor` object (PyTorch)
  * Channel values are floats in [0,1]


### Reading/opening images
Open as a OpenCV (numpy) image (NOTE: this opens the image as BGR) 
```
[](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#__codelineno-1-1>)cv2.imread(path)

```

Open as a PIL image 
```
[](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#__codelineno-2-1>)Image.Open(path)

```

### Writing images to disk
Write OpenCV image to disk 
```
[](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#__codelineno-3-1>)type(img) == np.ndarray
[](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#__codelineno-3-2>)cv2.imwrite(path, img)

```

Write Tensor to disk as image 
```
[](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#__codelineno-4-1>)type(img) == torch.Tensor
[](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#__codelineno-4-2>)transforms.ToPILImage()(img).save(path)

```

### Converting between image objects
Convert from PIL to OpenCV 
```
[](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#__codelineno-5-1>)type(img) == Image.Image
[](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#__codelineno-5-2>)cv2.cvtColor(np.array(img), cv2.COLOR_RGB2BGR)

```

Convert from OpenCV to PIL 
```
[](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#__codelineno-6-1>)type(img) == np.ndarray
[](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#__codelineno-6-2>)Image.fromarray(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))

```

Convert from Tensor to PIL 
```
[](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#__codelineno-7-1>)type(img) == torch.Tensor
[](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#__codelineno-7-2>)transforms.ToPILImage()(img)

```

Convert from PIL to Tensor 
```
[](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#__codelineno-8-1>)type(img) == Image.Image
[](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#__codelineno-8-2>)transforms.ToTensor()(img)

```

### Converting between colorspaces
#### OpenCV
OpenCV has several constants that specify which colorspace convert from and to. 
```
[](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#__codelineno-9-1>)cv2.COLOR_RGB2BGR # RGB -> BGR
[](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#__codelineno-9-2>)cv2.COLOR_BGR2GRAY # BGR -> grayscale
[](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#__codelineno-9-3>)# etc... you can swap the order of the colorspaces too

```

There exist many other colorspaces that you may find helpful (CIE, HSV, etc) and you can check all the conversions in the OpenCV [docs here](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/docs.opencv.org/3.4/de/d25/imgproc_color_conversions.html>). 
To actually convert the image 
```
[](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#__codelineno-10-1>)# replace cv2.COLOR_RGB2BGR with whatever you need
[](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/tritonuas.com/wiki/software/reference/computer_vision/#__codelineno-10-2>)cv2.cvtColor(img, cv2.COLOR_RGB2BGR)

```

June 9, 2023
Back to top 
Made with [ Material for MkDocs ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/squidfunk.github.io/mkdocs-material/>)
[ ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/github.com/tritonuas> "github.com") [ ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/gitlab.com/tuas> "gitlab.com") [ ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/hub.docker.com/orgs/tritonuas> "hub.docker.com") [ ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/medium.com/tuas> "medium.com") [ ](https://tritonuas.github.io/wiki/software/reference/computer_vision/<https:/facebook.com/tritonuas> "facebook.com")
